server:
  port: 7001
  shutdown: graceful
  netty:
    accept-count: 100
    connection-timeout: 2000
    max-connections: 8192
    threads:
      max: 200
      min-spare: 20

spring:
  redis:
    host: localhost
    port: 6379
  kafka:
    bootstrap-servers:
      - localhost:9092
    consumer:
      auto-offset-reset: earliest
    listener:
      missing-topics-fatal: false
  cloud:
    function:
      definition: updateWithdraw;transactionAutorize
    stream:
      bindings:
        transactionAutorize-in-0:
          destination: transaction-autorize-group
          contentType: application/json
          group: '${spring.application.name}'
        updateWithdraw-in-0:
          destination: update-withdraw-group
          content-type: application/json
          group: '${spring.application.name}'
        resetWithdraw-out-0:
          content-type: application/json
          destination: reset-withdraw-group
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5432/postgres
  r2dbc:
    username: root
    password: root
    url: r2dbc:postgresql://localhost:5432/postgres
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  application:
    name: webflux
  lifecycle:
    timeout-per-shutdown-phase: 15s

app:
  product: http://localhost:9090

topic:
  reset-withdraw: resetWithdraw-out-0
